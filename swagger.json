{
    "swagger":"2.0",
    "info":{
       "description":"This is a sample server Petstore server.",
       "version":"1.0.6",
       "title":"Swagger Petstore"
    },
    "host":"petstore.swagger.io",
    "basePath":"/v2",
    "schemes":[
       "https",
       "http"
    ],
    "paths":{
       "/store/order":{
          "post":{
             "tags":[
                "store"
             ],
             "summary":"Place an order for a pet",
             "description":"",
             "operationId":"placeOrder",
             "consumes":[
                "application/json"
             ],
             "produces":[
                "application/json",
                "application/xml"
             ],
             "parameters":[
                {
                   "in":"body",
                   "name":"body",
                   "description":"order placed for purchasing the pet",
                   "required":true,
                   "schema":{
                      "$ref":"#/definitions/Order"
                   }
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                      "$ref":"#/definitions/Order"
                   }
                },
                "400":{
                   "description":"Invalid Order"
                }
             }
          }
       },
       "/store/order/{orderId}":{
          "get":{
             "tags":[
                "store"
             ],
             "summary":"Find purchase order by ID",
             "description":"For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions",
             "operationId":"getOrderById",
             "produces":[
                "application/json",
                "application/xml"
             ],
             "parameters":[
                {
                   "name":"orderId",
                   "in":"path",
                   "description":"ID of pet that needs to be fetched",
                   "required":true,
                   "type":"integer",
                   "maximum":10,
                   "minimum":1,
                   "format":"int64"
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                      "$ref":"#/definitions/Order"
                   }
                },
                "400":{
                   "description":"Invalid ID supplied"
                },
                "404":{
                   "description":"Order not found"
                }
             }
          }
       },
       "/store/inventory":{
          "get":{
             "tags":[
                "store"
             ],
             "summary":"Returns pet inventories by status",
             "description":"Returns a map of status codes to quantities",
             "operationId":"getInventory",
             "produces":[
                "application/json"
             ],
             "parameters":[
                
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                      "type":"object",
                      "additionalProperties":{
                         "type":"integer",
                         "format":"int32"
                      }
                   }
                }
             },
             "security":[
                {
                   "api_key":[
                      
                   ]
                }
             ]
          }
       },
       "/user/{username}":{
          "get":{
             "tags":[
                "user"
             ],
             "summary":"Get user by user name",
             "description":"",
             "operationId":"getUserByName",
             "produces":[
                "application/json",
                "application/xml"
             ],
             "parameters":[
                {
                   "name":"username",
                   "in":"path",
                   "description":"The name that needs to be fetched. Use user1 for testing. ",
                   "required":true,
                   "type":"string"
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "schema":{
                      "$ref":"#/definitions/User"
                   }
                },
                "400":{
                   "description":"Invalid username supplied"
                },
                "404":{
                   "description":"User not found"
                }
             }
          }
       },
       "/user/login":{
          "get":{
             "tags":[
                "user"
             ],
             "summary":"Logs user into the system",
             "description":"",
             "operationId":"loginUser",
             "produces":[
                "application/json",
                "application/xml"
             ],
             "parameters":[
                {
                   "name":"username",
                   "in":"query",
                   "description":"The user name for login",
                   "required":true,
                   "type":"string"
                },
                {
                   "name":"password",
                   "in":"query",
                   "description":"The password for login in clear text",
                   "required":true,
                   "type":"string"
                }
             ],
             "responses":{
                "200":{
                   "description":"successful operation",
                   "headers":{
                      "X-Expires-After":{
                         "type":"string",
                         "format":"date-time",
                         "description":"date in UTC when token expires"
                      },
                      "X-Rate-Limit":{
                         "type":"integer",
                         "format":"int32",
                         "description":"calls per hour allowed by the user"
                      }
                   },
                   "schema":{
                      "type":"string"
                   }
                },
                "400":{
                   "description":"Invalid username/password supplied"
                }
             }
          }
       },
       "/user":{
          "post":{
             "tags":[
                "user"
             ],
             "summary":"Create user",
             "description":"This can only be done by the logged in user.",
             "operationId":"createUser",
             "consumes":[
                "application/json"
             ],
             "produces":[
                "application/json",
                "application/xml"
             ],
             "parameters":[
                {
                   "in":"body",
                   "name":"body",
                   "description":"Created user object",
                   "required":true,
                   "schema":{
                      "$ref":"#/definitions/User"
                   }
                }
             ],
             "responses":{
                "default":{
                   "description":"successful operation"
                }
             }
          }
       }
    },
    "securityDefinitions":{
       "api_key":{
          "type":"apiKey",
          "name":"api_key",
          "in":"header"
       },
       "petstore_auth":{
          "type":"oauth2",
          "authorizationUrl":"https://petstore.swagger.io/oauth/authorize",
          "flow":"implicit",
          "scopes":{
             "read:pets":"read your pets",
             "write:pets":"modify pets in your account"
          }
       }
    },
    "definitions":{
       "ApiResponse":{
          "type":"object",
          "properties":{
             "code":{
                "type":"integer",
                "format":"int32"
             },
             "type":{
                "type":"string"
             },
             "message":{
                "type":"string"
             }
          }
       },
       "Category":{
          "type":"object",
          "properties":{
             "id":{
                "type":"integer",
                "format":"int64"
             },
             "name":{
                "type":"string"
             }
          },
          "xml":{
             "name":"Category"
          }
       },
       "Pet":{
          "type":"object",
          "required":[
             "name",
             "photoUrls"
          ],
          "properties":{
             "id":{
                "type":"integer",
                "format":"int64"
             },
             "category":{
                "$ref":"#/definitions/Category"
             },
             "name":{
                "type":"string",
                "example":"doggie"
             },
             "photoUrls":{
                "type":"array",
                "xml":{
                   "wrapped":true
                },
                "items":{
                   "type":"string",
                   "xml":{
                      "name":"photoUrl"
                   }
                }
             },
             "tags":{
                "type":"array",
                "xml":{
                   "wrapped":true
                },
                "items":{
                   "xml":{
                      "name":"tag"
                   },
                   "$ref":"#/definitions/Tag"
                }
             },
             "status":{
                "type":"string",
                "description":"pet status in the store",
                "enum":[
                   "available",
                   "pending",
                   "sold"
                ]
             }
          },
          "xml":{
             "name":"Pet"
          }
       },
       "Tag":{
          "type":"object",
          "properties":{
             "id":{
                "type":"integer",
                "format":"int64"
             },
             "name":{
                "type":"string"
             }
          },
          "xml":{
             "name":"Tag"
          }
       },
       "Order":{
          "type":"object",
          "properties":{
             "id":{
                "type":"integer",
                "format":"int64"
             },
             "petId":{
                "type":"integer",
                "format":"int64"
             },
             "quantity":{
                "type":"integer",
                "format":"int32"
             },
             "shipDate":{
                "type":"string",
                "format":"date-time"
             },
             "status":{
                "type":"string",
                "description":"Order Status",
                "enum":[
                   "placed",
                   "approved",
                   "delivered"
                ]
             },
             "complete":{
                "type":"boolean"
             }
          },
          "xml":{
             "name":"Order"
          }
       },
       "User":{
          "type":"object",
          "properties":{
             "id":{
                "type":"integer",
                "format":"int64"
             },
             "username":{
                "type":"string"
             },
             "firstName":{
                "type":"string"
             },
             "lastName":{
                "type":"string"
             },
             "email":{
                "type":"string"
             },
             "password":{
                "type":"string"
             },
             "phone":{
                "type":"string"
             },
             "userStatus":{
                "type":"integer",
                "format":"int32",
                "description":"User Status"
             }
          },
          "xml":{
             "name":"User"
          }
       }
    },
    "externalDocs":{
       "description":"Find out more about Swagger",
       "url":"http://swagger.io"
    }
 }